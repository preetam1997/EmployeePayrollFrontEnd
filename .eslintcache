[{"C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\index.js":"1","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\App.js":"2","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\reportWebVitals.js":"3","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\RegistrationPageComponents\\Form.js":"4","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\Components\\payroll-form\\PayrollForm.jsx":"5","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\RegistrationPageComponents\\PayrollForm1.jsx":"6","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\RegistrationPageComponents\\RegMain.js":"7","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\HomepageComponents\\HeaderComponent.js":"8","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\Integrate\\Integration.js":"9","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\HomepageComponents\\Main.js":"10","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\HomepageComponents\\Content.jsx":"11","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\HomepageComponents\\Table.jsx":"12","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\Router\\Routering.jsx":"13","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\Updater\\UpdationForm.jsx":"14","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\Dashboard\\EmployeeDashBoard.jsx":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":197,"mtime":1608929840126,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":13137,"mtime":1609211164529,"results":"20","hashOfConfig":"17"},{"size":12879,"mtime":1608201636570,"results":"21","hashOfConfig":"17"},{"size":12864,"mtime":1608203305669,"results":"22","hashOfConfig":"17"},{"size":675,"mtime":1608277684804,"results":"23","hashOfConfig":"17"},{"size":657,"mtime":1608202927303,"results":"24","hashOfConfig":"17"},{"size":655,"mtime":1608326454488,"results":"25","hashOfConfig":"17"},{"size":681,"mtime":1608965326959,"results":"26","hashOfConfig":"17"},{"size":1092,"mtime":1608878453260,"results":"27","hashOfConfig":"17"},{"size":3337,"mtime":1608987116528,"results":"28","hashOfConfig":"17"},{"size":1576,"mtime":1609217044067,"results":"29","hashOfConfig":"17"},{"size":16043,"mtime":1608992764751,"results":"30","hashOfConfig":"17"},{"size":972,"mtime":1609135370922,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"19ywr3j",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\index.js",[],["70","71"],"C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\App.js",[],"C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\reportWebVitals.js",[],"C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\RegistrationPageComponents\\Form.js",["72","73","74","75","76","77"],"import React, { Component } from 'react'\r\nimport image1 from '../assets/Ellipse -3.png'\r\nimport image2 from '../assets/Ellipse 1.png'\r\nimport image3 from '../assets/Ellipse -8.png'\r\nimport image4 from '../assets/Ellipse -7.png'\r\nimport API from '../Integrate/Integration'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\n\r\nexport class Form extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             open:false,\r\n             department:[],\r\n             fields:{\r\n                name:'',\r\n                profile:'',\r\n                gender:'',\r\n                department:'',\r\n                salary:400000,\r\n                day:'1',\r\n                month:'January',\r\n                year:'2020',\r\n                notes:''\r\n             },\r\n\r\n            nameError:'',\r\n            dateError:''\r\n        }\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        let fields = this.state.fields;\r\n\r\n        fields[e.target.name] = e.target.value;\r\n        let firstNameRegex = RegExp(\"^([A-Z]{1})([a-z]{2,})$\");\r\n        let date = new Date(fields.day+\" \"+fields.month+\" \"+fields.year)\r\n        let currentDate = new Date()\r\n        let dateDifference = Math.ceil((Math.abs(date-currentDate))/(1000 * 60 * 60 * 24))\r\n        \r\n        if(!firstNameRegex.test(fields.name)){\r\n            this.setState({\r\n                nameError:'Name Incorrect'\r\n            })    \r\n        }\r\n        else{\r\n            this.setState({\r\n                fields,\r\n                nameError: ''\r\n            })\r\n        }\r\n\r\n        if(date>currentDate || dateDifference>90){\r\n            this.setState({\r\n                dateError:'Date Incorrect'\r\n            }) \r\n        }\r\n        else{\r\n            this.setState({\r\n                fields,\r\n                dateError:''\r\n            })\r\n        }\r\n        this.setState(state=>{\r\n            if(state.fields.department!=\"\" && !state.department.includes(state.fields.department)){\r\n                const department = [...state.department,state.fields.department];\r\n                return {department};\r\n            }\r\n            \r\n        })\r\n\r\n        console.log(this.state);\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        this.setState({\r\n            open:true\r\n        })\r\n\r\n        let Employee = {\r\n            name: this.state.fields.name,\r\n            profile:this.state.fields.profile,\r\n            gender:this.state.fields.gender,\r\n            department:this.state.department.join(),\r\n            salary: this.state.fields.salary,\r\n            day:this.state.fields.day,\r\n            month:this.state.fields.month,\r\n            year:this.state.fields.year,\r\n            notes:this.state.fields.Notes     \r\n        }\r\n        console.log(Employee);\r\n        \r\n        this.axiosFunc(Employee,function(response) {\r\n            console.log(response)});\r\n            \r\n        e.preventDefault();\r\n        window.setTimeout(function(){\r\n            window.location = \"http://localhost:3000/dashboard\";\r\n        },2000)\r\n    }\r\n    \r\n    axiosFunc=function(Employee,callback){\r\n\r\n        let response=API.addEmployees(Employee)\r\n        response.then(r=>{\r\n            callback(r.data)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n    \r\n    onReset(){\r\n        this.setState({\r\n            department:[],\r\n            fields:{\r\n                name:'',\r\n                profile:'',\r\n                gender:'',\r\n                department:'',\r\n                salary:'',\r\n                day:'1',\r\n                month:'January',\r\n                year:'2020',\r\n                notes:''\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"formId\" className=\"form-content\" onSubmit={this.handleSubmit}>\r\n            <form className=\"form\" action=\"#\">\r\n                <div className=\"form-head\">\r\n                    Employee Payroll Form\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <label className=\"label text\"htmlFor=\"name\">Name</label>\r\n                    <input className=\"input\" type=\"text\" id=\"name\" name=\"name\" onChange={this.handleChange} placeholder=\"Your name....\" required/>\r\n                    <error-output className=\"text-error\" htmlFor=\"text\">{this.state.nameError}</error-output>\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <label className=\"label text\" htmlFor=\"profile\">Profile Image</label>\r\n                    <div className=\"profile-radio-content\">\r\n                        <label>\r\n                            <input type=\"radio\" id=\"profile1\" onChange={this.handleChange} name=\"profile\" value=\"../assets/Ellipse -3.png\" required/>\r\n                            <img className=\"profile\" id=\"image\" src={image1}/>\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"radio\" id=\"profile2\" onChange={this.handleChange} name=\"profile\" value=\"../assets/Ellipse 1.png\" required/>\r\n                            <img className=\"profile\" id=\"image2\" src={image2}/>\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"radio\" id=\"profile3\" onChange={this.handleChange} name=\"profile\" value=\"../assets/Ellipse -8.png\" required/>\r\n                            <img className=\"profile\" id=\"image3\" src={image3}/>\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"radio\" id=\"profile4\" onChange={this.handleChange} name=\"profile\" value=\"../assets/Ellipse -7.png\" required/>\r\n                            <img className=\"profile\" id=\"image4\" src={image4}/>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <label className=\"label text\" htmlFor=\"gender\">Gender</label>\r\n                    <div>\r\n                        <input type=\"radio\" id=\"male\" onChange={this.handleChange} name=\"gender\" value=\"male\"/>\r\n                        <label className=\"text\" htmlFor=\"male\">Male</label>\r\n                        <input type=\"radio\" id=\"female\" onChange={this.handleChange} name=\"gender\" value=\"female\"/>\r\n                        <label className=\"text\" htmlFor=\"female\">Female</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <label className=\"label text\" htmlFor=\"department\">Department</label>\r\n                    <div>\r\n                        <input className=\"checkbox\" type=\"checkbox\" onChange={this.handleChange} id=\"hr\" name=\"department\" value=\"HR\"/>\r\n                        <label className=\"text\" htmlFor=\"hr\">HR</label>\r\n                        <input className=\"checkbox\" type=\"checkbox\" onChange={this.handleChange} id=\"sales\" name=\"department\" value=\"Sales\"/>\r\n                        <label className=\"text\" htmlFor=\"sales\">Sales</label>\r\n                        <input className=\"checkbox\" type=\"checkbox\" onChange={this.handleChange} id=\"finance\" name=\"department\" value=\"Finance\"/>\r\n                        <label className=\"text\" htmlFor=\"finance\">Finance</label>\r\n                        <input className=\"checkbox\" type=\"checkbox\" onChange={this.handleChange} id=\"engineer\" name=\"department\" value=\"Engineer\"/>\r\n                        <label className=\"text\" htmlFor=\"engineer\">Engineer</label>\r\n                        <input className=\"checkbox\" type=\"checkbox\" onChange={this.handleChange} id=\"others\" name=\"department\" value=\"Others\"/>\r\n                        <label className=\"text\" htmlFor=\"others\">Others</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <label className=\"label text\" htmlFor=\"salary\">Choose your salary</label>\r\n                    <input className=\"input\" type=\"range\" name=\"salary\" onChange={this.handleChange} id=\"salary\" min=\"300000\" max=\"500000\" step=\"100\" value={this.state.fields.salary}/>\r\n                    <output className=\"salary-output text\" htmlFor=\"salary\">{this.state.fields.salary}</output>\r\n                </div>\r\n                <div className=\"row-content\" >\r\n                    <label className=\"label text\" htmlFor=\"startDate\">Start Date</label>\r\n                    <div id=\"date\">\r\n                        <select id=\"day\" onChange={this.handleChange} name=\"day\">\r\n                            <option value = \"1\">1</option>\r\n                            <option value = \"2\">2</option>\r\n                            <option value = \"3\">3</option>\r\n                            <option value = \"4\">4</option>\r\n                            <option value = \"5\">5</option>\r\n                            <option value = \"6\">6</option>\r\n                            <option value = \"7\">7</option>\r\n                            <option value = \"8\">8</option>\r\n                            <option value = \"9\">9</option>\r\n                            <option value = \"10\">10</option>\r\n                            <option value = \"11\">11</option>\r\n                            <option value = \"12\">12</option>\r\n                            <option value = \"13\">13</option>\r\n                            <option value = \"14\">14</option>\r\n                            <option value = \"15\">15</option>\r\n                            <option value = \"16\">16</option>\r\n                            <option value = \"17\">17</option>\r\n                            <option value = \"18\">18</option>\r\n                            <option value = \"19\">19</option>\r\n                            <option value = \"20\">20</option>\r\n                            <option value = \"21\">21</option>\r\n                            <option value = \"22\">22</option>\r\n                            <option value = \"23\">23</option>\r\n                            <option value = \"24\">24</option>\r\n                            <option value = \"25\">25</option>\r\n                            <option value = \"26\">26</option>\r\n                            <option value = \"27\">27</option>\r\n                            <option value = \"28\">28</option>\r\n                            <option value = \"29\">29</option>\r\n                            <option value = \"30\">30</option>\r\n                            <option value = \"31\">31</option>\r\n                        </select>\r\n                        <select id=\"month\" onChange={this.handleChange} name=\"month\">\r\n                            <option value = \"January\">January</option>\r\n                            <option value = \"February\">February</option>\r\n                            <option value = \"March\">March</option>\r\n                            <option value = \"April\">April</option>\r\n                            <option value = \"May\">May</option>\r\n                            <option value = \"June\">June</option>\r\n                            <option value = \"July\">July</option>\r\n                            <option value = \"August\">August</option>\r\n                            <option value = \"September\">September</option>\r\n                            <option value = \"October\">October</option>\r\n                            <option value = \"November\">November</option>\r\n                            <option value = \"December\">December</option>\r\n                        </select>\r\n                        <select id=\"year\" onChange={this.handleChange} name=\"year\">\r\n                            <option value=\"2020\">2020</option>\r\n                            <option value=\"2019\">2019</option>\r\n                            <option value=\"2018\">2018</option>\r\n                            <option value=\"2017\">2017</option>\r\n                            <option value=\"2016\">2016</option>\r\n                        </select>\r\n                    </div>\r\n                    <error-output className=\"date-error\" htmlFor=\"startDate\">{this.state.dateError}</error-output>\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <label className=\"label text\" htmlFor=\"notes\">Notes</label>\r\n                    <textarea id=\"notes\" className=\"input\" name=\"Notes\" onChange={this.handleChange} placeholder=\"\" style={{height: 100}}></textarea>\r\n                </div>\r\n                <div className=\"button-content\">\r\n                    <a href=\"/dashboard\" className=\"resetButton button cancelButton\">Cancel</a>\r\n                    <div className=\"submit-reset\">\r\n                        <button type= \"submit\" className=\"button submitButton\" id=\"submitButton\">Submit</button>\r\n                        <Snackbar open={this.state.open}>\r\n                            <Alert severity=\"success\">\r\n                                Employee Added!! \r\n                            </Alert>\r\n                        </Snackbar>\r\n                        <button type=\"reset\" className=\"resetButton button\">Reset</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form \r\n","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\Components\\payroll-form\\PayrollForm.jsx",["78","79","80","81","82"],"C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\RegistrationPageComponents\\PayrollForm1.jsx",["83","84","85","86","87","88"],"import React,{useState,useEffect} from 'react'\r\nimport {withRouter} from 'react-router'\r\nimport image1 from '../assets/Ellipse -3.png'\r\nimport image2 from '../assets/Ellipse 1.png'\r\nimport image3 from '../assets/Ellipse -8.png'\r\nimport image4 from '../assets/Ellipse -7.png'\r\n\r\nconst PayrollForm=(props)=>{\r\n    let initialValue={\r\n        name:'',\r\n        profileArray:[\r\n            {url:'../assets/Ellipse -3.png'},\r\n            {url:'../assets/Ellipse 1.png'},\r\n            {url:'../assets/Ellipse -8.png'},\r\n            {url:'../assets/Ellipse -7.png'}\r\n        ],\r\n        allDepartments:[\r\n            'HR','Sales','Finance','Engineer','Others'\r\n        ],\r\n        departmentValue: [],\r\n        gender: '',\r\n        salary: '',\r\n        day: '1',\r\n        month: 'Jan',\r\n        year: '2020',\r\n        startDate: '',\r\n        notes: '',\r\n        id: '',\r\n        profileUrl: '',\r\n        isUpdate:false,\r\n        error:{\r\n            department: '',\r\n            name: '',\r\n            gender: '',\r\n            salary: '',\r\n            profileUrl: '',\r\n            startDate: '',\r\n        }\r\n    }\r\n    const [formValue,setform] = useState(initialValue);\r\n\r\n    const changevalue = (event)=>{\r\n        setform({...formValue,[event.target.name]: event.target.value})\r\n    }\r\n\r\n    const onCheckChange = (name)=>{\r\n        let index = formValue.departmentValue.indexOf(name)\r\n        let checkArray = [...formValue.departmentValue]\r\n        if(index>-1){\r\n            checkArray.splice(index,1)\r\n        }\r\n        else\r\n            checkArray.push(name);\r\n        setform({...formValue, departmentValue:checkArray})\r\n    }\r\n\r\n    const getChecked=(name)=>{\r\n        return formValue.departmentValue && formValue.departmentValue.includes(name);\r\n    }\r\n\r\n    const validData = async()=>{\r\n        let isError = false;\r\n        let error = {\r\n            department: '',\r\n            name: '',\r\n            gender: '',\r\n            salary: '',\r\n            profileUrl: '',\r\n            startDate: '',\r\n        }\r\n        if(formValue.name.length<1){\r\n            error.name = 'name is Required Field'\r\n            isError = true;\r\n        }\r\n        if(formValue.salary.length<1){\r\n            error.salary = 'salary is Required Field'\r\n            isError = true;\r\n        }\r\n        if(formValue.gender.length<1){\r\n            error.gender = 'gender is Required Field'\r\n            isError = true;\r\n        }\r\n        if(formValue.profileUrl.length<1){\r\n            error.profileUrl = 'profileUrl is Required Field'\r\n            isError = true;\r\n        }\r\n        if(formValue.departmentValue.length<1){\r\n            error.departmentValue = 'departmentValue is Required Field'\r\n            isError = true;\r\n        }\r\n        await setform({formValue,error: error})\r\n        return isError;\r\n    }\r\n    const save=async(event)=>{\r\n        event.preventDefault();\r\n        console.log(save)\r\n\r\n        // if(await validData()){\r\n        //     console.log('error', formValue);\r\n        //     return;\r\n        // }\r\n\r\n        let object = {\r\n            name: formValue.name,\r\n            department: formValue.departmentValue,\r\n            gender: formValue.gender,\r\n            salary: formValue.salary,\r\n            profileUrl: formValue.profileUrl,\r\n            startDate: `${formValue.day} ${formValue.month} ${formValue.year}`,\r\n            notes: formValue.notes,\r\n            id:''\r\n        }\r\n        console.log(object)\r\n    }\r\n    const reset=()=>{\r\n        setform({...initialValue,id:formValue.id,isUpdate:formValue.isUpdate})\r\n        console.log(formValue);\r\n    }\r\n\r\n    return(\r\n        <div id=\"formId\" className=\"form-content\">\r\n            <form className=\"form\" action=\"#\" onReset={reset} onSubmit={save}>\r\n                <div className=\"form-head\">\r\n                    Employee Payroll Form\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <label className=\"label text\"htmlFor=\"name\">Name</label>\r\n                    <input className=\"input\" type=\"text\" id=\"name\" name=\"name\" onChange={changevalue} value={formValue.name} placeholder=\"Your name....\" required/>\r\n                    <div className=\"text-error\" htmlFor=\"text\">{formValue.error.name}</div>\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <label className=\"label text\" htmlFor=\"profile\">Profile Image</label>\r\n                    <div className=\"profile-radio-content\">\r\n                        <label>\r\n                            <input type=\"radio\" id=\"profile1\" name=\"profile\" value=\"../assets/Ellipse -3.png\"  onChange={changevalue} required/>\r\n                            <img className=\"profile\" id=\"image\" src={image1}/>\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"radio\" id=\"profile2\" name=\"profile\" value=\"../assets/Ellipse 1.png\"  onChange={changevalue} required/>\r\n                            <img className=\"profile\" id=\"image2\" src={image2}/>\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"radio\" id=\"profile3\" name=\"profile\" value=\"../assets/Ellipse -8.png\"  onChange={changevalue} required/>\r\n                            <img className=\"profile\" id=\"image3\" src={image3}/>\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"radio\" id=\"profile4\" name=\"profile\" value=\"../assets/Ellipse -7.png\"  onChange={changevalue} required/>\r\n                            <img className=\"profile\" id=\"image4\" src={image4}/>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <label className=\"label text\" htmlFor=\"gender\">Gender</label>\r\n                    <div>\r\n                        <input type=\"radio\" id=\"male\"  onChange={changevalue} name=\"gender\" value=\"male\"/>\r\n                        <label className=\"text\" htmlFor=\"male\">Male</label>\r\n                        <input type=\"radio\" id=\"female\"  onChange={changevalue} name=\"gender\" value=\"female\"/>\r\n                        <label className=\"text\" htmlFor=\"female\">Female</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <label className=\"label text\" htmlFor=\"department\">Department</label>\r\n                    <div>\r\n                        <input className=\"checkbox\" type=\"checkbox\" id=\"hr\" name=\"department\" value=\"HR\" onChange={()=>onCheckChange(\"HR\")} defaultChecked={()=>getChecked(\"HR\")}/>\r\n                        <label className=\"text\" htmlFor=\"hr\">HR</label>\r\n                        <input className=\"checkbox\" type=\"checkbox\" id=\"sales\" name=\"department\" value=\"Sales\" onChange={()=>onCheckChange(\"Sales\")} defaultChecked={()=>getChecked(\"Sales\")}/>\r\n                        <label className=\"text\" htmlFor=\"sales\">Sales</label>\r\n                        <input className=\"checkbox\" type=\"checkbox\" id=\"finance\" name=\"department\" value=\"Finance\" onChange={()=>onCheckChange(\"Finance\")} defaultChecked={()=>getChecked(\"Finance\")}/>\r\n                        <label className=\"text\" htmlFor=\"finance\">Finance</label>\r\n                        <input className=\"checkbox\" type=\"checkbox\" id=\"engineer\" name=\"department\" value=\"Engineer\"onChange={()=>onCheckChange(\"Engineer\")} defaultChecked={()=>getChecked(\"Engineer\")}/>\r\n                        <label className=\"text\" htmlFor=\"engineer\">Engineer</label>\r\n                        <input className=\"checkbox\" type=\"checkbox\" id=\"others\" name=\"department\" value=\"Others\" onChange={()=>onCheckChange(\"Others\")} defaultChecked={()=>getChecked(\"Others\")}/>\r\n                        <label className=\"text\" htmlFor=\"others\">Others</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <label className=\"label text\" htmlFor=\"salary\">Choose your salary</label>\r\n                    <input className=\"input\" type=\"range\" name=\"salary\" onChange={changevalue} id=\"salary\" min=\"300000\" max=\"500000\" step=\"100\" value={formValue.salary}/>\r\n                    <output className=\"salary-output text\" htmlFor=\"salary\">{formValue.salary}</output>\r\n                </div>\r\n                <div className=\"row-content\" >\r\n                    <label className=\"label text\" htmlFor=\"startDate\">Start Date</label>\r\n                    <div id=\"date\">\r\n                        <select onChange={changevalue} id=\"day\" name=\"Day\">\r\n                            <option value = \"1\">1</option>\r\n                            <option value = \"2\">2</option>\r\n                            <option value = \"3\">3</option>\r\n                            <option value = \"4\">4</option>\r\n                            <option value = \"5\">5</option>\r\n                            <option value = \"6\">6</option>\r\n                            <option value = \"7\">7</option>\r\n                            <option value = \"8\">8</option>\r\n                            <option value = \"9\">9</option>\r\n                            <option value = \"10\">10</option>\r\n                            <option value = \"11\">11</option>\r\n                            <option value = \"12\">12</option>\r\n                            <option value = \"13\">13</option>\r\n                            <option value = \"14\">14</option>\r\n                            <option value = \"15\">15</option>\r\n                            <option value = \"16\">16</option>\r\n                            <option value = \"17\">17</option>\r\n                            <option value = \"18\">18</option>\r\n                            <option value = \"19\">19</option>\r\n                            <option value = \"20\">20</option>\r\n                            <option value = \"21\">21</option>\r\n                            <option value = \"22\">22</option>\r\n                            <option value = \"23\">23</option>\r\n                            <option value = \"24\">24</option>\r\n                            <option value = \"25\">25</option>\r\n                            <option value = \"26\">26</option>\r\n                            <option value = \"27\">27</option>\r\n                            <option value = \"28\">28</option>\r\n                            <option value = \"29\">29</option>\r\n                            <option value = \"30\">30</option>\r\n                            <option value = \"31\">31</option>\r\n                        </select>\r\n                        <select onChange={changevalue} id=\"month\" name=\"Month\">\r\n                            <option value = \"January\">January</option>\r\n                            <option value = \"February\">February</option>\r\n                            <option value = \"March\">March</option>\r\n                            <option value = \"April\">April</option>\r\n                            <option value = \"May\">May</option>\r\n                            <option value = \"June\">June</option>\r\n                            <option value = \"July\">July</option>\r\n                            <option value = \"August\">August</option>\r\n                            <option value = \"September\">September</option>\r\n                            <option value = \"October\">October</option>\r\n                            <option value = \"November\">November</option>\r\n                            <option value = \"December\">December</option>\r\n                        </select>\r\n                        <select onChange={changevalue} id=\"year\" name=\"Year\">\r\n                            <option value=\"2020\">2020</option>\r\n                            <option value=\"2019\">2019</option>\r\n                            <option value=\"2018\">2018</option>\r\n                            <option value=\"2017\">2017</option>\r\n                            <option value=\"2016\">2016</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"date-error\" htmlFor=\"startDate\"></div>\r\n                </div>\r\n                <div className=\"row-content\">\r\n                    <label className=\"label text\" htmlFor=\"notes\">Notes</label>\r\n                    <textarea onChange={changevalue} id=\"notes\" className=\"input\" name=\"Notes\" placeholder=\"\" style={{height: 100}}></textarea>\r\n                </div>\r\n                <div className=\"button-content\">\r\n                    <a href=\"./html_1.html\" className=\"resetButton button cancelButton\">Cancel</a>\r\n                    <div className=\"submit-reset\">\r\n                        <button type= \"submit\" className=\"button submitButton\" id=\"submitButton\">Submit</button>\r\n                        <button type=\"reset\" className=\"resetButton button\">Reset</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(PayrollForm);","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\RegistrationPageComponents\\RegMain.js",["89","90"],"import React, { Component } from 'react'\r\nimport HeaderComponent from '../HomepageComponents/HeaderComponent'\r\nimport css1 from '../css/homepage-header.css'\r\nimport css2 from '../css/form.css'\r\nimport css3 from '../css/button.css'\r\nimport css4 from '../css/select.css'\r\nimport css5 from '../css/radioContent.css'\r\nimport PayrollForm1 from './PayrollForm1'\r\nimport Form from './Form'\r\n\r\n\r\nexport class RegMain extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HeaderComponent style={css1}></HeaderComponent>\r\n                <Form style={css2,css3,css4,css5}></Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegMain\r\n","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\HomepageComponents\\HeaderComponent.js",[],"C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\Integrate\\Integration.js",[],"C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\HomepageComponents\\Main.js",["91","92","93"],"import React, { Component } from 'react'\r\nimport css1 from '../css/homepage-header.css'\r\nimport css2 from '../css/homepage-adduserHeader.css'\r\nimport css3 from '../css/homepage-table.css'\r\nimport Content from './Content'\r\nimport HeaderComponent from './HeaderComponent'\r\nimport Table from './Table'\r\n\r\nexport class Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <div >\r\n              <HeaderComponent  style={css1}></HeaderComponent>  \r\n              <Content></Content>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main\r\n","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\HomepageComponents\\Content.jsx",["94"],"import React, { Component } from 'react'\r\nimport image1 from '../assets/add-24px.svg'\r\nimport MainReg from '../RegistrationPageComponents/RegMain';\r\nimport Table from './Table';\r\nexport class Content extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            count:10\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    onCountUpdation=(val)=>{\r\n        this.setState({\r\n            count:val\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        let url = 'http://localhost:3000/register'\r\n        return (\r\n            <div className=\"main-content\">\r\n                <div className=\"header-content\">\r\n                    <div className=\"emp-detail-text\">\r\n                        Employee Details<div className=\"emp-count\">{this.state.count}</div>\r\n                    </div>\r\n                    <a href={url} className=\"add-button\">\r\n                    <img src={image1} alt=\"\"/>Add User</a>\r\n                </div>\r\n                <Table onUpdateTable={this.onCountUpdation}></Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content\r\n","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\HomepageComponents\\Table.jsx",["95","96"],"import React, { Component } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport API from '../Integrate/Integration'\r\nimport asset1 from '../assets/delete-black-18dp.svg'\r\nimport asset2 from '../assets/create-black-18dp.svg'\r\nimport { myContext } from '../Dashboard/EmployeeDashBoard'\r\n\r\n\r\n\r\n\r\nexport class Table extends Component {\r\n    constructor() {\r\n        super()\r\n    \r\n        this.state = {\r\n             image:'',\r\n             update:false,\r\n             employees:[],\r\n             imageMapping: new Map(),\r\n             count:0\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        API.getEmployees().then(response => {\r\n            console.log(response)\r\n            this.setState({\r\n                employees: response.data,\r\n                \r\n            })\r\n            console.log(this.state.employees)\r\n            this.props.onUpdateTable(this.state.employees.length)\r\n        }).catch()\r\n    \r\n        this.state.imageMapping.set(\"../assets/Ellipse -3.png\",require(\"../assets/Ellipse -3.png\").default)\r\n        this.state.imageMapping.set(\"../assets/Ellipse 1.png\",require(\"../assets/Ellipse 1.png\").default)\r\n        this.state.imageMapping.set(\"../assets/Ellipse -8.png\",require(\"../assets/Ellipse -8.png\").default)\r\n        this.state.imageMapping.set(\"../assets/Ellipse -7.png\",require(\"../assets/Ellipse -7.png\").default)\r\n\r\n    }\r\n\r\n    \r\n\r\n   \r\n\r\n   delete(id){\r\n       API.deleteEmployees(id)\r\n       window.location.reload();\r\n   }\r\n\r\n   \r\n\r\n    render() {\r\n        if(this.state.employees.length==0){\r\n            return (\r\n                \r\n                <div>\r\n                        \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <myContext.Consumer>\r\n                    {data=>(\r\n                        <table id=\"table-display\" className=\"table\">\r\n                        <tbody>\r\n                        <tr><th></th><th>Name</th><th>Gender</th><th>Department</th><th>Salary</th><th>Start Date</th><th>Actions</th></tr>\r\n                        {this.state.employees.map(emp=>{\r\n                            return(\r\n\r\n                            <tr>\r\n                            <td><img className=\"profile\" loading='eager' src={this.state.imageMapping.get(emp.profile)}  alt=\"profilePic\" /></td>\r\n                            <td>{emp.name}</td>\r\n                            <td>{emp.gender}</td>\r\n                            <td>{emp.department}</td>\r\n                            <td>{emp.salary}</td>\r\n                            <td>{emp.day+'/'+emp.month+'/'+emp.year}</td>\r\n                            <td>\r\n                                <img id={emp.id} alt=\"delete\" onClick={()=>this.delete(emp.id)}\r\n                                    src={asset1}/>\r\n                                <img id={emp.id} alt=\"edit\" onClick={()=>data.handleChange(emp.id)}\r\n                                        src={asset2}/>\r\n                                \r\n                            </td>\r\n                        </tr>\r\n                            )\r\n                        })}\r\n                        </tbody>\r\n                    </table> \r\n                    )}\r\n                \r\n            </myContext.Consumer>                \r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Table\r\n","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\Router\\Routering.jsx",["97","98","99"],"C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\Updater\\UpdationForm.jsx",["100","101","102","103","104","105","106","107","108","109","110"],"import React, { Component } from 'react'\r\nimport image1 from '../assets/Ellipse -3.png'\r\nimport image2 from '../assets/Ellipse 1.png'\r\nimport image3 from '../assets/Ellipse -8.png'\r\nimport image4 from '../assets/Ellipse -7.png'\r\nimport API from '../Integrate/Integration'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nclass UpdationForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            open:false,\r\n            department:[],\r\n            employee:{\r\n                name:'',\r\n                profile:'',\r\n                gender:'',\r\n                department:'',\r\n                salary:400000,\r\n                day:'1',\r\n                month:'January',\r\n                year:'2020',\r\n                notes:''\r\n            },\r\n            \r\n            nameError:'',\r\n            dateError:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            id:this.props.location.state,\r\n        })\r\n\r\n        this.fetchData()\r\n        console.warn(this.props.location.state)\r\n    }\r\n\r\n    fetchData(){\r\n        API.getEmployeesById(this.props.location.state).then(response => {\r\n            console.log(response.data.id)\r\n            \r\n            this.setState({\r\n                employee: response.data,\r\n            })\r\n            \r\n            \r\n\r\n            this.setState(state=>{\r\n                let list = state.employee.department.split(',')\r\n                state.employee.department=''\r\n                const department = [...list]\r\n                return {department};\r\n                \r\n                \r\n            })\r\n        }).catch()\r\n        \r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let employee = this.state.employee;\r\n        employee[e.target.name] = e.target.value;\r\n        this.setState({\r\n            employee\r\n        })\r\n\r\n        let firstNameRegex = RegExp(\"^([A-Z]{1})([a-z]{2,})$\");\r\n        let date = new Date(employee.day+\" \"+employee.month+\" \"+employee.year)\r\n        let currentDate = new Date()\r\n        let dateDifference = Math.ceil((Math.abs(date-currentDate))/(1000 * 60 * 60 * 24))\r\n        \r\n        if(!firstNameRegex.test(employee.name)){\r\n            this.setState({\r\n                nameError:'Name Incorrect'\r\n            })    \r\n        }\r\n        else{\r\n            this.setState({\r\n                employee,\r\n                nameError: ''\r\n            })\r\n        }\r\n\r\n        if(date>currentDate || dateDifference>90){\r\n            this.setState({\r\n                dateError:'Date Incorrect'\r\n            }) \r\n        }\r\n        else{\r\n            this.setState({\r\n                employee,\r\n                dateError:''\r\n            })\r\n        }\r\n\r\n\r\n\r\n        this.setState(state=>{\r\n            if(state.employee.department!=\"\" && !state.department.includes(state.employee.department)){\r\n                const department = [...state.department,state.employee.department];\r\n                state.employee.department=''\r\n                return {department};\r\n            }\r\n            else if(state.department.includes(state.employee.department)){\r\n                const index = state.department.indexOf(state.employee.department);\r\n                if (index > -1) {\r\n                    state.department.splice(index, 1);\r\n                }\r\n                state.employee.department=''\r\n\r\n            }\r\n        })\r\n        console.log(this.state);\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        this.setState({\r\n            open:true\r\n        })\r\n\r\n        let Employee = {\r\n            name: this.state.employee.name,\r\n            profile:this.state.employee.profile,\r\n            gender:this.state.employee.gender,\r\n            department:this.state.department.join(),\r\n            salary: this.state.employee.salary,\r\n            day:this.state.employee.day,\r\n            month:this.state.employee.month,\r\n            year:this.state.employee.year,\r\n            notes:this.state.employee.notes     \r\n        }\r\n        console.log(Employee);\r\n        API.updateEmployees(this.state.id,Employee)\r\n\r\n        e.preventDefault();\r\n        window.setTimeout(function(){\r\n            window.location = \"http://localhost:3000/dashboard\";\r\n        },2000)\r\n    }\r\n\r\n    onReset(){\r\n        this.setState({\r\n            department:[],\r\n            employee:{\r\n                name:'',\r\n                profile:'',\r\n                gender:'',\r\n                department:'',\r\n                salary:'',\r\n                day:'1',\r\n                month:'January',\r\n                year:'2020',\r\n                notes:''\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"formId\" className=\"form-content\" onSubmit={this.handleSubmit}>\r\n                    <form className=\"form\" action=\"#\">\r\n                        <div className=\"form-head\">\r\n                            Employee Payroll Form\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <label className=\"label text\"htmlFor=\"name\">Name</label>\r\n                            <input className=\"input\" type=\"text\" id=\"name\" name=\"name\" onChange={this.handleChange} value={this.state.employee.name} placeholder=\"Your name....\" required/>\r\n                            <error-output className=\"text-error\" htmlFor=\"text\">{this.state.nameError}</error-output>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <label className=\"label text\" htmlFor=\"profile\">Profile Image</label>\r\n                            <div className=\"profile-radio-content\">\r\n                                <label>\r\n                                    <input type=\"radio\" id=\"profile1\" onChange={this.handleChange} name=\"profile\" checked={this.state.employee.profile==\"../assets/Ellipse -3.png\"} value=\"../assets/Ellipse -3.png\" required/>\r\n                                    <img className=\"profile\" id=\"image\" src={image1}/>\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" id=\"profile2\" onChange={this.handleChange} name=\"profile\" checked={this.state.employee.profile==\"../assets/Ellipse 1.png\"} value=\"../assets/Ellipse 1.png\" required/>\r\n                                    <img className=\"profile\" id=\"image2\" src={image2}/>\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" id=\"profile3\" onChange={this.handleChange} name=\"profile\" checked={this.state.employee.profile==\"../assets/Ellipse -8.png\"} value=\"../assets/Ellipse -8.png\" required/>\r\n                                    <img className=\"profile\" id=\"image3\" src={image3}/>\r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" id=\"profile4\" onChange={this.handleChange} name=\"profile\" checked={this.state.employee.profile==\"../assets/Ellipse -7.png\"} value=\"../assets/Ellipse -7.png\" required/>\r\n                                    <img className=\"profile\" id=\"image4\" src={image4}/>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <label className=\"label text\" htmlFor=\"gender\">Gender</label>\r\n                            <div>\r\n                                <input type=\"radio\" id=\"male\" onChange={this.handleChange} name=\"gender\" checked={this.state.employee.gender==\"male\"} value=\"male\"/>\r\n                                <label className=\"text\" htmlFor=\"male\">Male</label>\r\n                                <input type=\"radio\" id=\"female\" onChange={this.handleChange} name=\"gender\" checked={this.state.employee.gender==\"female\"} value=\"female\"/>\r\n                                <label className=\"text\" htmlFor=\"female\">Female</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <label className=\"label text\" htmlFor=\"department\">Department</label>\r\n                            <div>\r\n                                <input className=\"checkbox\" type=\"checkbox\" onChange={this.handleChange} id=\"hr\" checked={this.state.department.includes(\"HR\")} name=\"department\" value=\"HR\"/>\r\n                                <label className=\"text\" htmlFor=\"hr\">HR</label>\r\n                                <input className=\"checkbox\" type=\"checkbox\" onChange={this.handleChange} id=\"sales\" checked={this.state.department.includes(\"Sales\")} name=\"department\" value=\"Sales\"/>\r\n                                <label className=\"text\" htmlFor=\"sales\">Sales</label>\r\n                                <input className=\"checkbox\" type=\"checkbox\" onChange={this.handleChange} id=\"finance\"checked={this.state.department.includes(\"Finance\")} name=\"department\" value=\"Finance\"/>\r\n                                <label className=\"text\" htmlFor=\"finance\">Finance</label>\r\n                                <input className=\"checkbox\" type=\"checkbox\" onChange={this.handleChange} id=\"engineer\" checked={this.state.department.includes(\"Engineer\")} name=\"department\" value=\"Engineer\"/>\r\n                                <label className=\"text\" htmlFor=\"engineer\">Engineer</label>\r\n                                <input className=\"checkbox\" type=\"checkbox\" onChange={this.handleChange} id=\"others\" checked={this.state.department.includes(\"Others\")} name=\"department\" value=\"Others\"/>\r\n                                <label className=\"text\" htmlFor=\"others\">Others</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <label className=\"label text\" htmlFor=\"salary\">Choose your salary</label>\r\n                            <input className=\"input\" type=\"range\" name=\"salary\" onChange={this.handleChange} id=\"salary\" min=\"300000\" max=\"500000\" step=\"100\" value={this.state.employee.salary}/>\r\n                            <output className=\"salary-output text\" htmlFor=\"salary\">{this.state.employee.salary}</output>\r\n                        </div>\r\n                        <div className=\"row-content\" >\r\n                            <label className=\"label text\" htmlFor=\"startDate\">Start Date</label>\r\n                            <div id=\"date\">\r\n                                <select id=\"day\" onChange={this.handleChange}  value={this.state.employee.day} name=\"day\">\r\n                                    <option value = \"1\">1</option>\r\n                                    <option value = \"2\">2</option>\r\n                                    <option value = \"3\">3</option>\r\n                                    <option value = \"4\">4</option>\r\n                                    <option value = \"5\">5</option>\r\n                                    <option value = \"6\">6</option>\r\n                                    <option value = \"7\">7</option>\r\n                                    <option value = \"8\">8</option>\r\n                                    <option value = \"9\">9</option>\r\n                                    <option value = \"10\">10</option>\r\n                                    <option value = \"11\">11</option>\r\n                                    <option value = \"12\">12</option>\r\n                                    <option value = \"13\">13</option>\r\n                                    <option value = \"14\">14</option>\r\n                                    <option value = \"15\">15</option>\r\n                                    <option value = \"16\">16</option>\r\n                                    <option value = \"17\">17</option>\r\n                                    <option value = \"18\">18</option>\r\n                                    <option value = \"19\">19</option>\r\n                                    <option value = \"20\">20</option>\r\n                                    <option value = \"21\">21</option>\r\n                                    <option value = \"22\">22</option>\r\n                                    <option value = \"23\">23</option>\r\n                                    <option value = \"24\">24</option>\r\n                                    <option value = \"25\">25</option>\r\n                                    <option value = \"26\">26</option>\r\n                                    <option value = \"27\">27</option>\r\n                                    <option value = \"28\">28</option>\r\n                                    <option value = \"29\">29</option>\r\n                                    <option value = \"30\">30</option>\r\n                                    <option value = \"31\">31</option>\r\n                                </select>\r\n                                <select id=\"month\" onChange={this.handleChange} value={this.state.employee.month} name=\"month\">\r\n                                    <option value = \"January\">January</option>\r\n                                    <option value = \"February\">February</option>\r\n                                    <option value = \"March\">March</option>\r\n                                    <option value = \"April\">April</option>\r\n                                    <option value = \"May\">May</option>\r\n                                    <option value = \"June\">June</option>\r\n                                    <option value = \"July\">July</option>\r\n                                    <option value = \"August\">August</option>\r\n                                    <option value = \"September\">September</option>\r\n                                    <option value = \"October\">October</option>\r\n                                    <option value = \"November\">November</option>\r\n                                    <option value = \"December\">December</option>\r\n                                </select>\r\n                                <select id=\"year\" onChange={this.handleChange} value={this.state.employee.year} name=\"year\">\r\n                                    <option value=\"2020\">2020</option>\r\n                                    <option value=\"2019\">2019</option>\r\n                                    <option value=\"2018\">2018</option>\r\n                                    <option value=\"2017\">2017</option>\r\n                                    <option value=\"2016\">2016</option>\r\n                                </select>\r\n                            </div>\r\n                            <error-output className=\"date-error\" htmlFor=\"startDate\">{this.state.dateError}</error-output>\r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <label className=\"label text\" htmlFor=\"notes\">Notes</label>\r\n                            <textarea id=\"notes\" className=\"input\" name=\"notes\" onChange={this.handleChange} value={this.state.employee.notes} placeholder=\"\" style={{height: 100}}></textarea>\r\n                        </div>\r\n                        <div className=\"button-content\">\r\n                            <a href=\"./html_1.html\" className=\"resetButton button cancelButton\">Cancel</a>\r\n                            <div className=\"submit-reset\">\r\n                                <button type= \"submit\" className=\"button submitButton\" id=\"submitButton\">Update</button>\r\n                                <Snackbar open={this.state.open}>\r\n                                    <Alert severity=\"success\">\r\n                                         Employee Updated!! \r\n                                    </Alert>\r\n                                </Snackbar>\r\n                                <button type=\"reset\" className=\"resetButton button\">Reset</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(UpdationForm)  \r\n","C:\\Users\\Preetam\\Employee-Payroll\\employee-payroll-app\\src\\Dashboard\\EmployeeDashBoard.jsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":7,"column":10,"nodeType":"117","messageId":"118","endLine":7,"endColumn":20},{"ruleId":"119","severity":1,"message":"120","line":69,"column":39,"nodeType":"121","messageId":"122","endLine":69,"endColumn":41},{"ruleId":"123","severity":1,"message":"124","line":152,"column":29,"nodeType":"125","endLine":152,"endColumn":79},{"ruleId":"123","severity":1,"message":"124","line":156,"column":29,"nodeType":"125","endLine":156,"endColumn":80},{"ruleId":"123","severity":1,"message":"124","line":160,"column":29,"nodeType":"125","endLine":160,"endColumn":80},{"ruleId":"123","severity":1,"message":"124","line":164,"column":29,"nodeType":"125","endLine":164,"endColumn":80},{"ruleId":"115","severity":1,"message":"126","line":1,"column":24,"nodeType":"117","messageId":"118","endLine":1,"endColumn":33},{"ruleId":"123","severity":1,"message":"124","line":136,"column":29,"nodeType":"125","endLine":136,"endColumn":79},{"ruleId":"123","severity":1,"message":"124","line":140,"column":29,"nodeType":"125","endLine":140,"endColumn":80},{"ruleId":"123","severity":1,"message":"124","line":144,"column":29,"nodeType":"125","endLine":144,"endColumn":80},{"ruleId":"123","severity":1,"message":"124","line":148,"column":29,"nodeType":"125","endLine":148,"endColumn":80},{"ruleId":"115","severity":1,"message":"126","line":1,"column":24,"nodeType":"117","messageId":"118","endLine":1,"endColumn":33},{"ruleId":"115","severity":1,"message":"127","line":61,"column":11,"nodeType":"117","messageId":"118","endLine":61,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":136,"column":29,"nodeType":"125","endLine":136,"endColumn":79},{"ruleId":"123","severity":1,"message":"124","line":140,"column":29,"nodeType":"125","endLine":140,"endColumn":80},{"ruleId":"123","severity":1,"message":"124","line":144,"column":29,"nodeType":"125","endLine":144,"endColumn":80},{"ruleId":"123","severity":1,"message":"124","line":148,"column":29,"nodeType":"125","endLine":148,"endColumn":80},{"ruleId":"115","severity":1,"message":"128","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":20},{"ruleId":"129","severity":1,"message":"130","line":17,"column":34,"nodeType":"131","messageId":"132","endLine":17,"endColumn":35},{"ruleId":"115","severity":1,"message":"133","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":12},{"ruleId":"115","severity":1,"message":"134","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":12},{"ruleId":"115","severity":1,"message":"135","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":13},{"ruleId":"115","severity":1,"message":"136","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":15},{"ruleId":"115","severity":1,"message":"137","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":20},{"ruleId":"119","severity":1,"message":"138","line":56,"column":39,"nodeType":"121","messageId":"122","endLine":56,"endColumn":41},{"ruleId":"115","severity":1,"message":"139","line":2,"column":26,"nodeType":"117","messageId":"118","endLine":2,"endColumn":32},{"ruleId":"115","severity":1,"message":"140","line":4,"column":11,"nodeType":"117","messageId":"118","endLine":4,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":30,"column":22,"nodeType":"121","messageId":"122","endLine":30,"endColumn":24},{"ruleId":"119","severity":1,"message":"120","line":105,"column":41,"nodeType":"121","messageId":"122","endLine":105,"endColumn":43},{"ruleId":"119","severity":1,"message":"138","line":182,"column":151,"nodeType":"121","messageId":"122","endLine":182,"endColumn":153},{"ruleId":"123","severity":1,"message":"124","line":183,"column":37,"nodeType":"125","endLine":183,"endColumn":87},{"ruleId":"119","severity":1,"message":"138","line":186,"column":151,"nodeType":"121","messageId":"122","endLine":186,"endColumn":153},{"ruleId":"123","severity":1,"message":"124","line":187,"column":37,"nodeType":"125","endLine":187,"endColumn":88},{"ruleId":"119","severity":1,"message":"138","line":190,"column":151,"nodeType":"121","messageId":"122","endLine":190,"endColumn":153},{"ruleId":"123","severity":1,"message":"124","line":191,"column":37,"nodeType":"125","endLine":191,"endColumn":88},{"ruleId":"119","severity":1,"message":"138","line":194,"column":151,"nodeType":"121","messageId":"122","endLine":194,"endColumn":153},{"ruleId":"123","severity":1,"message":"124","line":195,"column":37,"nodeType":"125","endLine":195,"endColumn":88},{"ruleId":"119","severity":1,"message":"138","line":202,"column":141,"nodeType":"121","messageId":"122","endLine":202,"endColumn":143},{"ruleId":"119","severity":1,"message":"138","line":204,"column":143,"nodeType":"121","messageId":"122","endLine":204,"endColumn":145},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'validData' is assigned a value but never used.","'PayrollForm1' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'css2' is defined but never used.","'css3' is defined but never used.","'Table' is defined but never used.","'MainReg' is defined but never used.","'useHistory' is defined but never used.","Expected '===' and instead saw '=='.","'Router' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]